{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ravit\\\\Documents\\\\flask react practice\\\\admin\\\\src\\\\Components\\\\Logout.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Logout = () => {\n  _s();\n  const [show, setShow] = useState(false);\n  const history = useHistory();\n  const adminLogout = async () => {\n    const token = await localStorage.getItem('token');\n    console.log('===>' + token);\n    try {\n      const res = await fetch('/logoutAdmin', {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          \"auth\": token\n        })\n      });\n      const data = await res.json();\n      if (res.status === 201) {\n        setShow(true);\n        await localStorage.removeItem('token');\n        window.alert('Successfully Logout');\n        history.push('/login', {\n          replace: true\n        });\n        window.location.reload();\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    const confirmBox = window.confirm(\"Do you really want to Logout?\");\n    if (confirmBox === true) {\n      adminLogout();\n      localStorage.removeItem('token');\n      history.push('/login', {\n        replace: true\n      });\n    } else {\n      history.push('/');\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: show ? 'Logout Successfully!' : 'processing...'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n_s(Logout, \"LM+mZZQJigvNn6N5A5ailFyh/90=\", false, function () {\n  return [useHistory];\n});\n_c = Logout;\nexport default Logout;\nvar _c;\n$RefreshReg$(_c, \"Logout\");","map":{"version":3,"names":["React","useEffect","useState","useHistory","jsxDEV","_jsxDEV","Logout","_s","show","setShow","history","adminLogout","token","localStorage","getItem","console","log","res","fetch","method","headers","body","JSON","stringify","data","json","status","removeItem","window","alert","push","replace","location","reload","error","confirmBox","confirm","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ravit/Documents/flask react practice/admin/src/Components/Logout.js"],"sourcesContent":["import React, {  useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\n\r\nconst Logout = () => {\r\n\r\n\r\n    const [show, setShow] = useState(false)\r\n    const history = useHistory();\r\n\r\n    const adminLogout = async () => {\r\n\r\n        const token = await localStorage.getItem('token')\r\n        console.log('===>' + token)\r\n        try {\r\n\r\n            const res = await fetch('/logoutAdmin', {\r\n                method: \"POST\",\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    \"auth\": token\r\n                })\r\n            });\r\n\r\n            const data = await res.json();\r\n            if (res.status === 201) {\r\n                setShow(true)\r\n                await localStorage.removeItem('token')\r\n                window.alert('Successfully Logout')\r\n\r\n                history.push('/login', { replace: true })\r\n                window.location.reload();\r\n            }\r\n\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        const confirmBox = window.confirm(\r\n            \"Do you really want to Logout?\"\r\n        )\r\n        if (confirmBox === true) {\r\n            adminLogout()\r\n            localStorage.removeItem('token')\r\n            history.push('/login', { replace: true })\r\n\r\n        } else {\r\n            history.push('/')\r\n        }\r\n\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <h1>{show ? 'Logout Successfully!' : 'processing...'}</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Logout"],"mappings":";;AAAA,OAAOA,KAAK,IAAKC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACnD,SAASC,UAAU,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAI9C,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAGjB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACvC,MAAMQ,OAAO,GAAGP,UAAU,CAAC,CAAC;EAE5B,MAAMQ,WAAW,GAAG,MAAAA,CAAA,KAAY;IAE5B,MAAMC,KAAK,GAAG,MAAMC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IACjDC,OAAO,CAACC,GAAG,CAAC,MAAM,GAAGJ,KAAK,CAAC;IAC3B,IAAI;MAEA,MAAMK,GAAG,GAAG,MAAMC,KAAK,CAAC,cAAc,EAAE;QACpCC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACjB,MAAM,EAAEX;QACZ,CAAC;MACL,CAAC,CAAC;MAEF,MAAMY,IAAI,GAAG,MAAMP,GAAG,CAACQ,IAAI,CAAC,CAAC;MAC7B,IAAIR,GAAG,CAACS,MAAM,KAAK,GAAG,EAAE;QACpBjB,OAAO,CAAC,IAAI,CAAC;QACb,MAAMI,YAAY,CAACc,UAAU,CAAC,OAAO,CAAC;QACtCC,MAAM,CAACC,KAAK,CAAC,qBAAqB,CAAC;QAEnCnB,OAAO,CAACoB,IAAI,CAAC,QAAQ,EAAE;UAAEC,OAAO,EAAE;QAAK,CAAC,CAAC;QACzCH,MAAM,CAACI,QAAQ,CAACC,MAAM,CAAC,CAAC;MAC5B;IAGJ,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZnB,OAAO,CAACC,GAAG,CAACkB,KAAK,CAAC;IAEtB;EACJ,CAAC;EAGDjC,SAAS,CAAC,MAAM;IACZ,MAAMkC,UAAU,GAAGP,MAAM,CAACQ,OAAO,CAC7B,+BACJ,CAAC;IACD,IAAID,UAAU,KAAK,IAAI,EAAE;MACrBxB,WAAW,CAAC,CAAC;MACbE,YAAY,CAACc,UAAU,CAAC,OAAO,CAAC;MAChCjB,OAAO,CAACoB,IAAI,CAAC,QAAQ,EAAE;QAAEC,OAAO,EAAE;MAAK,CAAC,CAAC;IAE7C,CAAC,MAAM;MACHrB,OAAO,CAACoB,IAAI,CAAC,GAAG,CAAC;IACrB;EAEJ,CAAC,CAAC;EAEF,oBACIzB,OAAA;IAAAgC,QAAA,eACIhC,OAAA;MAAAgC,QAAA,EAAK7B,IAAI,GAAG,sBAAsB,GAAG;IAAe;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzD,CAAC;AAEd,CAAC;AAAAlC,EAAA,CA5DKD,MAAM;EAAA,QAIQH,UAAU;AAAA;AAAAuC,EAAA,GAJxBpC,MAAM;AA8DZ,eAAeA,MAAM;AAAA,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}